---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import {SITE_TITLE, SITE_DESCRIPTION, SITE_IMAGE} from '../consts';
import {DarkModeToggledEventEmitter} from '../DarkModeToggledEventEmitter'

// interface Props {
// 	title: string;
// 	description: string;
// 	image: string;
// }


const canonicalURL = new URL(Astro.url.pathname, Astro.url.origin);

const {title = SITE_TITLE, description = SITE_DESCRIPTION, image = SITE_IMAGE} = Astro.props;

const imageUrl = new URL(image, Astro.url.origin);
---

<title>{title}</title>
<link rel="shortcut icon" href={SITE_IMAGE}>

<meta charset="UTF-8">

<meta charset="UTF-8">

<meta name="viewport" content="width=device-width">
<meta name="viewport" content="width=device-width, initial-scale=1">

<meta name="title" content={title}>
<meta name="author" content="Louis Jones"/>
<meta name="description"
      content={description}>

<meta property="og:title" content={title}>
<meta property="og:description"
      content={description}>
<meta property="og:image" content={imageUrl}>
<meta property="og:url" content={canonicalURL}>
<link rel="canonical" href={canonicalURL} />

<script>
    import {DarkModeToggledEventEmitter} from "../DarkModeToggledEventEmitter";

    // window.addEventListener("load", () => {

        let darkToggle = document.getElementById("dark-mode");
        let cookies = document.cookie.split(";");
        let dark;
        let darkFound = false;
        for (let cookie of cookies) {
            if (cookie.split("=")[0].includes("dark")) {
                dark = cookie.split("=")[1] === "true";
                darkFound = true;
            }
        }
        if (!darkFound && window.matchMedia('(prefers-color-scheme: dark)').matches) {
            document.cookie = "dark=true; path=/; expires=Thu, 31 Dec 2099 00:00:00 GMT";
            dark = true;
        }
        if (!dark) {
            document.cookie = "dark=false; path=/; expires=Thu, 31 Dec 2099 00:00:00 GMT";
            dark = false;
        }
        DarkModeToggledEventEmitter.getInstance().addListener(toggleDarkMode)
        DarkModeToggledEventEmitter.getInstance().addListener((dark) => {
            document.cookie = "dark=" + dark + "; path=/; expires=Thu, 31 Dec 2099 00:00:00 GMT";
            if (dark) {
                darkToggle.classList.remove("fa-moon");
                darkToggle.classList.add("fa-sun");
            } else {
                darkToggle.classList.remove("fa-sun");
                darkToggle.classList.add("fa-moon");
            }
        })
        // DarkModeToggledEventEmitter.getInstance().addListener(swapPreferredColorScheme)
        DarkModeToggledEventEmitter.getInstance().emit(dark)
        darkToggle.onclick = () => {
            dark = !dark;
            localStorage.setItem("dark", "" + dark)
            DarkModeToggledEventEmitter.getInstance().emit(dark)
        };
        let panes = document.getElementsByClassName("fade-in");
        window.onscroll = () => {
            checkOnScreen(panes);
        };
        window.onresize = () => {
            checkOnScreen(panes);
        };
        checkOnScreen(panes);
    // });

    function checkOnScreen(panes) {
        let top = document.body.scrollTop;
        let bottom = window.innerHeight + top;
        for (let pane of panes) {
            let rect = pane.getBoundingClientRect();
            if (rect.top < bottom && rect.bottom > 0 && !pane.classList.contains("faded")) {
                pane.classList.add("faded");
            }
        }
    }

    function toggleDarkMode(dark) {
        let darkToggle = document.getElementById("dark-mode");
        if (dark) {
            swapClasses("light", "dark");
            darkToggle.classList.remove("fa-moon");
            darkToggle.classList.add("fa-sun");
        } else {
            swapClasses("dark", "light");
            darkToggle.classList.remove("fa-sun");
            darkToggle.classList.add("fa-moon");
        }
    }


    function swapClasses(oldClass, newClass) {
        for (let elem of document.querySelectorAll("." + oldClass)) {
            elem.classList.remove(oldClass);
            elem.classList.add(newClass);
        }
    }

</script>
